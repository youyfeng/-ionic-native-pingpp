{"version":3,"sources":["../../../src/@ionic-native/plugins/pingpp/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;GAWG;AACH,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAgCxE;;;;;;;;;;;;;;;;;;;;GAoBG;AAUH,IAAa,MAAM;IAAS,0BAAiB;IAA7C;;IAkBA,CAAC;IAhBC;;;;OAIG;IAEH,8BAAa,GAAb,UAAc,MAAqB;QACjC,MAAM,CAAC,CAAC,yDAAyD;IACnE,CAAC;IAQH,aAAC;AAAD,CAlBA,AAkBC,CAlB2B,iBAAiB,GAkB5C;AANM,iBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,qBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AATA;IADC,OAAO,EAAE;;;;2CAGT;AAVU,MAAM;IATlB,MAAM,CAAC;QACN,UAAU,EAAE,QAAQ;QACpB,MAAM,EAAE,4BAA4B;QACpC,SAAS,EAAE,QAAQ;QACnB,IAAI,EAAE,mDAAmD;QACzD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;QAC7B,OAAO,EAAE,EAAE;KACZ,CAAC;GAEW,MAAM,CAkBlB;SAlBY,MAAM","file":"index.js","sourceRoot":"","sourcesContent":["/**\n * This is a template for new plugin wrappers\n *\n * TODO:\n * - Add/Change information below\n * - Document usage (importing, executing main functionality)\n * - Remove any imports that you are not using\n * - Add this file to /src/index.ts (follow style of other plugins)\n * - Remove all the comments included in this template, EXCEPT the @Plugin wrapper docs and any other docs you added\n * - Remove this note\n *\n */\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\n\nexport interface ChargeOptions {\n  amount?: number;\n  amount_refunded?: number;\n  amount_settle?: number;\n  app?: string;\n  body?: string;\n  channel?: string;\n  client_ip?: string;\n  created?: number;\n  credential: any;\n  currency?: string;\n  description: any;\n  extra?: any;\n  failure_code?: any;\n  failure_msg?: any;\n  id?: string;\n  livemode?: boolean;\n  metadata?: any;\n  object?: string;\n  order_no?: string;\n  paid?: boolean;\n  refunded?: boolean;\n  refunds?: any;\n  subject?: string;\n  time_expire?: number;\n  time_paid?: any;\n  time_settle?: any;\n  transaction_no?: any;\n}\n/**\n * @name Pingpp\n * @description\n * This plugin does something\n *\n * @usage\n * ```\n * import { Pingpp } from '@ionic-native/pingpp';\n *\n *\n * constructor(private pingpp: Pingpp) { }\n *\n * ...\n *\n *\n * this.pingpp.functionName('Hello', 123)\n *   .then((res: any) => console.log(res))\n *   .catch((error: any) => console.error(error));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'Pingpp',\n  plugin: 'me.tongchia.cordova.pingpp', // npm package name, example: cordova-plugin-camera\n  pluginRef: 'pingpp', // the variable reference to call the plugin, example: navigator.geolocation\n  repo: 'https://github.com/TongChia/cordova-plugin-pingpp', // the github repository URL for the plugin\n  platforms: ['Android', 'iOS'], // Array of platforms supported, example: ['Android', 'iOS']\n  install: '', // OPTIONAL install command, in case the plugin requires variables\n})\n\nexport class Pingpp extends IonicNativePlugin {\n\n  /**\n   * This function does something\n   * @param charge {any} Some param to configure something\n   * @return {Promise<any>} Returns a promise that resolves when something happens\n   */\n  @Cordova()\n  createPayment(charge: ChargeOptions): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}